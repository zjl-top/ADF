{
	"name": "DimResourceGroup",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "Json",
						"type": "DatasetReference"
					},
					"name": "ODSDetail"
				},
				{
					"dataset": {
						"referenceName": "DIMAccount",
						"type": "DatasetReference"
					},
					"name": "DimAccount"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "DIMAccount",
						"type": "DatasetReference"
					},
					"name": "DimResourceGroup"
				}
			],
			"transformations": [
				{
					"name": "AggColumn"
				},
				{
					"name": "JoinAccount"
				},
				{
					"name": "Alter"
				},
				{
					"name": "UpdateTime"
				},
				{
					"name": "select"
				},
				{
					"name": "ResourceGroupNotNull"
				}
			],
			"script": "parameters{\n\ttpf as string ('')\n}\nsource(output(\n\t\tAccountOwnerId as string,\n\t\tAccountName as string,\n\t\tServiceAdministratorId as string,\n\t\tSubscriptionId as integer,\n\t\tSubscriptionGuid as string,\n\t\tSubscriptionName as string,\n\t\tDate as string,\n\t\tMonth as integer,\n\t\tDay as integer,\n\t\tYear as integer,\n\t\tProduct as string,\n\t\tMeterId as string,\n\t\tMeterCategory as string,\n\t\tMeterSubCategory as string,\n\t\tMeterRegion as string,\n\t\tMeterName as string,\n\t\tConsumedQuantity as double,\n\t\tResourceRate as double,\n\t\tExtendedCost as double,\n\t\tResourceLocation as string,\n\t\tConsumedService as string,\n\t\tInstanceId as string,\n\t\tServiceInfo1 as string,\n\t\tServiceInfo2 as string,\n\t\tAdditionalInfo as string,\n\t\tTags as string,\n\t\tStoreServiceIdentifier as string,\n\t\tDepartmentName as string,\n\t\tCostCenter as string,\n\t\tUnitOfMeasure as string,\n\t\tResourceGroup as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false,\n\tdocumentForm: 'documentPerLine',\n\twildcardPaths:[($tpf)]) ~> ODSDetail\nsource(output(\n\t\tId as integer,\n\t\tAccountOwnerId as string,\n\t\tAccountName as string,\n\t\tInsertTime as timestamp,\n\t\tUpdateTime as timestamp\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table') ~> DimAccount\nResourceGroupNotNull aggregate(groupBy(SubscriptionId,\n\t\tSubscriptionGuid,\n\t\tSubscriptionName,\n\t\tAccountOwnerId,\n\t\tAccountName,\n\t\tResourceGroup),\n\tAccountOwnerIDCount = count(AccountOwnerId)) ~> AggColumn\nAggColumn, DimAccount join(AggColumn@AccountOwnerId == DimAccount@AccountOwnerId\n\t&& AggColumn@AccountName == DimAccount@AccountName,\n\tjoinType:'left',\n\tbroadcast: 'auto')~> JoinAccount\nselect alterRow(upsertIf(true())) ~> Alter\nJoinAccount derive(UPDATETIME = currentTimestamp()) ~> UpdateTime\nUpdateTime select(mapColumn(\n\t\tSubscriptionId,\n\t\tSubscriptionGuid,\n\t\tSubscriptionName,\n\t\tResourceGroup,\n\t\tAccountId = Id,\n\t\tUpdateTime = UpdateTime@UPDATETIME\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> select\nODSDetail derive(ResourceGroup = iifNull(upper(ResourceGroup),'')) ~> ResourceGroupNotNull\nAlter sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tinput(\n\t\tId as integer,\n\t\tAccountOwnerId as string,\n\t\tAccountName as string,\n\t\tInsertTime as timestamp,\n\t\tUpdateTime as timestamp\n\t),\n\tdeletable:false,\n\tinsertable:true,\n\tupdateable:false,\n\tupsertable:true,\n\tkeys:['SubscriptionId','SubscriptionName','ResourceGroup','AccountId'],\n\tformat: 'table',\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\terrorHandlingOption: 'stopOnFirstError') ~> DimResourceGroup"
		}
	}
}